% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Phemd-methods.R
\docType{methods}
\name{Phemd-methods}
\alias{Phemd-methods}
\alias{selectMarkers<-}
\alias{selectMarkers<-,Phemd-method}
\alias{Phemd,ANY,ANY-method}
\alias{rawExpn<-}
\alias{Phemd,character,ANY-method}
\alias{rawExpn<-,Phemd-method}
\alias{pooledCells<-}
\alias{pooledCells<-,Phemd-method}
\alias{subsampledIdx<-}
\alias{subsampledIdx<-,Phemd-method}
\alias{subsampledBool<-}
\alias{subsampledBool<-,Phemd-method}
\alias{monocleInfo<-}
\alias{monocleInfo<-,Phemd-method}
\alias{seuratInfo<-}
\alias{seuratInfo<-,Phemd-method}
\alias{celltypeFreqs<-}
\alias{celltypeFreqs<-,Phemd-method}
\alias{batchIDs<-}
\alias{batchIDs<-,Phemd-method}
\alias{GDM<-}
\alias{GDM<-,Phemd-method}
\title{Setter function for protein / gene markers}
\usage{
selectMarkers(obj) <- value

\S4method{selectMarkers}{Phemd}(obj) <- value

rawExpn(obj) <- value

\S4method{rawExpn}{Phemd}(obj) <- value

pooledCells(obj) <- value

\S4method{pooledCells}{Phemd}(obj) <- value

subsampledIdx(obj) <- value

\S4method{subsampledIdx}{Phemd}(obj) <- value

subsampledBool(obj) <- value

\S4method{subsampledBool}{Phemd}(obj) <- value

monocleInfo(obj) <- value

\S4method{monocleInfo}{Phemd}(obj) <- value

seuratInfo(obj) <- value

\S4method{seuratInfo}{Phemd}(obj) <- value

celltypeFreqs(obj) <- value

\S4method{celltypeFreqs}{Phemd}(obj) <- value

batchIDs(obj) <- value

\S4method{batchIDs}{Phemd}(obj) <- value

GDM(obj) <- value

\S4method{GDM}{Phemd}(obj) <- value
}
\arguments{
\item{obj}{A Phemd object}

\item{value}{Assignment object}
}
\value{
Updated Phemd object

Updated Phemd object

Updated Phemd object

Updated Phemd object

Updated Phemd object

Updated Phemd object containing Seurat object

Updated Phemd object

Updated Phemd object

Updated Phemd object
}
\description{
Setter function for protein / gene markers

Setter function for stored expression data

Setter function for single-cell expression data aggregated from multiple samples

Setter function for indices of cells subsampled from each sample during aggregation

Setter function for boolean denoting whether cells were subsampled from each sample during aggregation

Setter function for Monocle2 CellDataSet object for experiment

Setter function for Seurat object for experiment

Setter function for cell subtype frequencies of each single-cell sample

Setter function for batch IDs of each single-cell sample

Setter function for EMD ground distance matrix
}
\examples{
phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
new_genes <- all_genes
new_genes[1] <- 'IL2R'
selectMarkers(phemdObj) <- new_genes

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
new_expn_data <- all_expn_data
new_expn_data <- lapply(new_expn_data, function(x) {log2(x+1)})
rawExpn(phemdObj) <- new_expn_data

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
aggregated_data <- t(do.call(rbind,all_expn_data))
pooledCells(phemdObj) <- aggregated_data

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
subsampledIdxList<- rep(list(1:10), length(all_expn_data)) #subsampled cells 1-10 from each sample
subsampledIdx(phemdObj) <- subsampledIdxList

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
subsampledBool(phemdObj) <- TRUE

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
mydata <- pooledCells(phemdObj)
myCellDataSet <- newCellDataSet(mydata,phenoData=NULL, expressionFamily=VGAM::negbinomial.size())
monocleInfo(phemdObj) <- myCellDataSet

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
my_seuratObj <- Seurat::CreateSeuratObject(counts = t(all_expn_data[[1]]), project = "A")
seuratInfo(phemdObj) <- my_seuratObj

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
myCellTypeFreqs <- matrix(rexp(length(all_expn_data)*10, rate=.1), ncol=10)
myCellTypeFreqs <- apply(myCellTypeFreqs, 1, function(x) {x / sum(x)})
celltypeFreqs(phemdObj) <- myCellTypeFreqs

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
my_seuratObj <- Seurat::CreateSeuratObject(counts = t(all_expn_data[[1]]), project = "A")
seuratInfo(phemdObj) <- my_seuratObj
batchIDs(phemdObj) <- rep('A', length(all_expn_data))

phemdObj <- createDataObj(all_expn_data, all_genes, as.character(snames_data))
cluster_locs <- 1:10
myGDM <- as.matrix(dist(cluster_locs))
GDM(phemdObj) <- myGDM

}
