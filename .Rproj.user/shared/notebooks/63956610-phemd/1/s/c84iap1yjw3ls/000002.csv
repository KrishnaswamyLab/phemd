"0","traceback()
"
"1","5: .rs.scalar(ele)"
"1","
"
"1","4: FUN(X[[i]], ...)"
"1","
"
"1","3: lapply(l, function(ele) {"
"1","
"
"1","       if (is.null(ele)) "
"1","
"
"1","           NULL"
"1","
"
"1","       else if (is.list(ele)) "
"1","
"
"1","           .rs.scalarListFromList(ele)"
"1","
"
"1","       else if (length(ele) == 1) {"
"1","
"
"1","           if (is.character(ele) && Encoding(ele) == ""unknown"") "
"1","
"
"1","               Encoding(ele) <- ""UTF-8"""
"1","
"
"1","           .rs.scalar(ele)"
"1","
"
"1","       }"
"1","
"
"1","       else ele"
"1","
"
"1","   })"
"1","
"
"1","2: .rs.scalarListFromList(opts)"
"1","
"
"1","1: (function (code) "
"1","
"
"1","   {"
"1","
"
"1","       opts <- list()"
"1","
"
"1","       code <- unlist(strsplit(code, ""\n"", fixed = TRUE))[[1]]"
"1","
"
"1","       matches <- unlist(regmatches(code, regexec(.rs.reRmdChunkBegin(), "
"1","
"
"1","           code)))"
"1","
"
"1","       if (length(matches) > 1) "
"1","
"
"1","           code <- matches[[2]]"
"1","
"
"1","       tryCatch({"
"1","
"
"1","           setupIndicator <- ""r setup"""
"1","
"
"1","           if (identical(substring(code, 1, nchar(setupIndicator)), "
"1","
"
"1","               setupIndicator)) {"
"1","
"
"1","               opts$include <- FALSE"
"1","
"
"1","           }"
"1","
"
"1","           opts$engine <- unlist(strsplit(code, split = ""(\\s|,)+""))[[1]]"
"1","
"
"1","           code <- substring(code, nchar(opts$engine) + 1)"
"1","
"
"1","           opts <- .rs.mergeLists(opts, eval(substitute(knitr:::parse_params(code)), "
"1","
"
"1","               envir = .GlobalEnv))"
"1","
"
"1","       }, error = function(e) {"
"1","
"
"1","       })"
"1","
"
"1","       .rs.scalarListFromList(opts)"
"1","
"
"1","   })(""```{r echo=F}\nmyobj <- aggregate_samples(myobj, max_cells=12000)\n```"")"
"1","
"
